// Generated by CoffeeScript 2.0.1
(function() {
  $(window).on('load', function() {
    $('#loader').delay(900).fadeOut(900);
    $('#loading_ani').delay(600).fadeOut(300);
    return graph.initialize();
  });

  window.graph = {
    point: {
      cute: localStorage.getItem('cute'),
      beautiful: localStorage.getItem('beautiful'),
      durability: localStorage.getItem('durability'),
      reproduction: localStorage.getItem('reproduction')
    },
    ticks: {
      min: 0,
      max: 100
    },
    initialize: function() {
      var key, ref, self, value;
      ref = this.point;
      for (key in ref) {
        value = ref[key];
        if (value >= 100) {
          this.ticks.min = 20;
          this.ticks.max = 120;
        }
      }
      //端末を縦で見るとき
      this.setWindowSize();
      this.setNotSideView();
      $(window).on('resize', function() {
        self.setNotSideView();
        return self.setWindowSize();
      });
      this.setYourName();
      //グラフの背景を指定
      Chart.plugins.register({
        beforeDraw: function(c) {
          var ctx;
          ctx = c.chart.ctx;
          ctx.fillStyle = "rgba(0, 0, 0, 0)";
          return ctx.fillRect(0, 0, c.chart.width, c.chart.height);
        }
      });
      this.drawGraph();
      self = this;
      return localStorage.clear();
    },
    setNotSideView: function() {
      var w_height;
      w_height = $(window).height();
      if (w_height <= 800) {
        $('.name-wrap').css('top', '12%');
        return $('#downloadImageButton').css('bottom', '17%');
      } else {
        $('.name-wrap').css('top', '29%');
        return $('#downloadImageButton').css('bottom', '32%');
      }
    },
    setWindowSize: function() {
      var set_w_height;
      set_w_height = $(window).height();
      return $('.contents-wrap').css('height', set_w_height);
    },
    setYourName: function() {
      return $('.name-wrap .name-text').text(localStorage.getItem('yourname'));
    },
    drawGraph: function() {
      var ctx, myChart;
      ctx = document.getElementById('myChart');
      return myChart = new Chart(ctx, {
        type: 'radar',
        data: {
          labels: ['', '', '', ''],
          datasets: [
            {
              label: '',
              backgroundColor: 'rgba(231,128,171,0.7)',
              borderColor: '#db498a',
              borderSize: 'bold',
              borderWidth: 3,
              pointBorderWidth: 7,
              pointBackgroundColor: '#db498a',
              data: [this.point.cute,
            this.point.beautiful,
            this.point.durability,
            this.point.reproduction]
            }
          ]
        },
        options: {
          responsive: true,
          legend: {
            display: false
          },
          scale: {
            ticks: {
              min: this.ticks.min,
              max: this.ticks.max,
              stepSize: 20,
              fontSize: 20
            }
          },
          chartArea: {
            backgroundColor: '#000'
          }
        }
      });
    }
  };

}).call(this);
